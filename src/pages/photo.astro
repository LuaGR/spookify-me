---
import Layout from '../layouts/Layout.astro'
import { getCldImageUrl } from 'astro-cloudinary/helpers'

const { searchParams } = Astro.url
const id = searchParams.get('id')

if (id == null) return Astro.redirect('/')

const url = getCldImageUrl({ src: id })
console.log({ id, url })
---

<Layout title='Cloudinary Photo'>
  <main
    data-id={id}
    class='flex flex-col gap-12 items-center'>
    <header class='flex flex-col gap-12'>
      <h1 class='text-5xl text-center'>Edit your photo</h1>

      <section class='flex justify-between'>
        <button
          class='add'
          data-topic='ghost'>
          Add phantoms
        </button>

        <button
          class='add'
          data-topic='zombies'>
          Add zombies
        </button>

        <button
          class='add'
          data-topic='devil'>
          Add devil
        </button>
      </section>
    </header>

    <img
      id='preview'
      src={url}
      class='size-80'
    />

    <small>{url}</small>

    <div>
      <button class='download'> Descargar en Avif </button>
    </div>

    <a href='/'>Volver a Home</a>
  </main>
</Layout>

<style>
  img {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    transition: opacity 0.3s ease;
  }

  /* Adding the fade-in animation for the preview image */
  .fade-in {
    animation: fadeIn ease 1s;
    opacity: 1;
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateY(20px); /* Slight upward slide */
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  import { getCldImageUrl } from 'astro-cloudinary/helpers'

  const id = document.querySelector('main')?.getAttribute('data-id') ?? ''
  const preview = document.getElementById('preview') as HTMLImageElement
  const buttons = document.querySelectorAll('button')
  const downloadButton = document.querySelector(
    '.download'
  ) as HTMLButtonElement

  const TOPICS: Record<string, string> = {
    ghost: 'Add scary ghosts to the background',
    zombies: 'Add zombies to the background',
    devil: 'Add some devils to the background',
    custom: ''
  } as const

  // Add animation classes
  function applyAnimation(image: HTMLImageElement) {
    image.classList.remove('fade-in') // Reset the animation
    void image.offsetWidth // Trigger reflow (required to restart animation)
    image.classList.add('fade-in') // Apply the fade-in animation
  }

  buttons.forEach((button) => {
    button.addEventListener('click', (e) => {
      const topic = button.getAttribute('data-topic')
      if (topic == null) return

      const url = getCldImageUrl({
        src: id,
        replaceBackground: TOPICS[topic]
      })

      // Apply the effect with animation
      preview.style.opacity = '.3' // Dim image
      preview.src = url
      applyAnimation(preview) // Apply fade-in animation

      preview.onload = () => {
        preview.style.opacity = '1'
      }
    })
  })

  downloadButton.addEventListener('click', (e) => {
    const url = getCldImageUrl({ src: id, format: 'avif' })

    const a = document.createElement('a')
    a.href = url
    a.download = 'image.avif'
    a.click()
  })
</script>
